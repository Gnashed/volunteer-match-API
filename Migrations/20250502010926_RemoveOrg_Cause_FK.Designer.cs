// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace VolunteerMatch.Migrations
{
    [DbContext(typeof(VolunteerMatchDbContext))]
    [Migration("20250502010926_RemoveOrg_Cause_FK")]
    partial class RemoveOrg_Cause_FK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("volunteerMatch.Models.Cause", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Causes");
                });

            modelBuilder.Entity("volunteerMatch.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CauseId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsFollowing")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("volunteerMatch.Models.OrganizationCause", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int>("CauseId")
                        .HasColumnType("integer");

                    b.HasKey("OrganizationId", "CauseId");

                    b.HasIndex("CauseId");

                    b.ToTable("OrganizationCauses");
                });

            modelBuilder.Entity("volunteerMatch.Models.OrganizationFollower", b =>
                {
                    b.Property<int>("VolunteerId")
                        .HasColumnType("integer");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.HasKey("VolunteerId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationFollowers");
                });

            modelBuilder.Entity("volunteerMatch.Models.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("volunteerMatch.Models.VolunteerFollower", b =>
                {
                    b.Property<int>("FollowerId")
                        .HasColumnType("integer");

                    b.Property<int>("FollowedId")
                        .HasColumnType("integer");

                    b.HasKey("FollowerId", "FollowedId");

                    b.HasIndex("FollowedId");

                    b.ToTable("VolunteerFollowers");
                });

            modelBuilder.Entity("volunteerMatch.Models.Organization", b =>
                {
                    b.HasOne("volunteerMatch.Models.Cause", null)
                        .WithMany("Organizations")
                        .HasForeignKey("CauseId");

                    b.HasOne("volunteerMatch.Models.Volunteer", "Volunteer")
                        .WithMany()
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("volunteerMatch.Models.OrganizationCause", b =>
                {
                    b.HasOne("volunteerMatch.Models.Cause", "Cause")
                        .WithMany("OrganizationCauses")
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("volunteerMatch.Models.Organization", "Organization")
                        .WithMany("OrganizationCauses")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cause");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("volunteerMatch.Models.OrganizationFollower", b =>
                {
                    b.HasOne("volunteerMatch.Models.Organization", "Organization")
                        .WithMany("OrganizationFollowers")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("volunteerMatch.Models.Volunteer", "Volunteer")
                        .WithMany("OrganizationFollowers")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("volunteerMatch.Models.VolunteerFollower", b =>
                {
                    b.HasOne("volunteerMatch.Models.Volunteer", "Followed")
                        .WithMany("Followed")
                        .HasForeignKey("FollowedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("volunteerMatch.Models.Volunteer", "Follower")
                        .WithMany("Followers")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Followed");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("volunteerMatch.Models.Cause", b =>
                {
                    b.Navigation("OrganizationCauses");

                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("volunteerMatch.Models.Organization", b =>
                {
                    b.Navigation("OrganizationCauses");

                    b.Navigation("OrganizationFollowers");
                });

            modelBuilder.Entity("volunteerMatch.Models.Volunteer", b =>
                {
                    b.Navigation("Followed");

                    b.Navigation("Followers");

                    b.Navigation("OrganizationFollowers");
                });
#pragma warning restore 612, 618
        }
    }
}
